<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Senthil Kumaran (Posts about distributed systems)</title><link>http://www.xtoinfinity.com/</link><description></description><atom:link href="http://www.xtoinfinity.com/categories/distributed-systems.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 17 Apr 2020 02:56:55 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Reading List: Interviews</title><link>http://www.xtoinfinity.com/posts/2020/02/15/reading-list-interviews.html</link><dc:creator>Senthil Kumaran</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.jarednelsen.dev/posts/The-horrifically-dystopian-world-of-software-engineering-interviews"&gt;The Horrifically Dystopian World of Software Engineering Interviews&lt;/a&gt;&lt;/p&gt;
&lt;div class="admonition admonition-job-search"&gt;
&lt;p class="first admonition-title"&gt;job search&lt;/p&gt;
&lt;p class="last"&gt;I could go on bemoaning the many disappointing experiences I had on this
slog of a job search. There were many of them. 23 interviews and I didn’t
get a single offer. I have always sought to be completely honest and humble
with myself and others about my abilities.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I had a similar experience after getting fired from twitter. I attend 20-30 interviews and I managed to clear one.
The experience frustrated me to no end.&lt;/p&gt;
&lt;p&gt;My personal experience at Square interview was one of humiliation. I was escorted out after the 1st round as I could
not write code.&lt;/p&gt;
&lt;div class="admonition admonition-cottage-industry"&gt;
&lt;p class="first admonition-title"&gt;cottage industry&lt;/p&gt;
&lt;p class="last"&gt;There is a cottage industry springing up around passing interviews - All of
this algorithm challenge hubub started with popular companies like Google.
There were several engineers who worked at these popular tech companies that
saw an opportunity to make a few bucks be offering prep material. There were
two influential books written on the subject: Cracking the Coding Interview and
Elements of Programming Interviews. Both of these books offer guided interview
preparation material. The problem is that the industry got a hold of these
books and tailored their interviews to the book’s material.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This is real. So many start-ups help you prepare for the interview.&lt;/p&gt;
&lt;div class="admonition admonition-acceptance"&gt;
&lt;p class="first admonition-title"&gt;Acceptance&lt;/p&gt;
&lt;p class="last"&gt;Complaining about it wont do any good.  - Sooner or later I’m going to have to
get another job. Even if I don’t like the methodology, I am going to have to go
through the loop again.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The final conclusions makes it a balanced article, in my opinion.&lt;/p&gt;
&lt;p&gt;There is no good way to find the right candidates. These interviews of-course help test if the candidate can code,
has prepared for the interview and is taking the process seriously. I am with this process until we find a better one.&lt;/p&gt;
&lt;hr class="docutils"&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.usenix.org/legacy/event/usenix10/tech/full_papers/Hunt.pdf"&gt;ZooKeeper- Wait-free coordination for Internet-scale systems&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;By Patrick Hunt and Mahadev Konar of Yahoo! Grid and Flavio P. Junqueira and Benjamin Reed of Yahoo! Research&lt;/p&gt;
&lt;div class="admonition admonition-wait-free"&gt;
&lt;p class="first admonition-title"&gt;wait-free&lt;/p&gt;
&lt;p class="last"&gt;Our system,  Zookeeper,hence implements an API that manipulates
simple wait-free data objects organized hierarchically as in file systems.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition admonition-linearizable-writes"&gt;
&lt;p class="first admonition-title"&gt;Linearizable writes&lt;/p&gt;
&lt;p class="last"&gt;With ZooKeeper, we are able to implement all coordination primitives that our applications require, even though
only writes are linearizable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition admonition-ordering-gaurantees"&gt;
&lt;p class="first admonition-title"&gt;Ordering Gaurantees&lt;/p&gt;
&lt;p&gt;ZooKeeper has two basic ordering guarantees.&lt;/p&gt;
&lt;p&gt;Linearizable writes: All requests that update the state of  ZooKeeper  are
serializable  and  respect precedence.&lt;/p&gt;
&lt;p class="last"&gt;FIFO client order: All requests from a given client are executed  in the
order  that  they  were  sent  by  the client.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The important design of the Zookeeper was in the Client API used by the clients, server is a well defined architecture.&lt;/p&gt;
&lt;p&gt;I used Zookeeper for the Packer service, which is a service to manage artifacts on Aurora scheduler (on Mesos)  at
twitter. ZK was used along with hadoop for storing package metadata. This was overkill for simple operation, and it
was decided migrate the service from ZK to a relational database like MySQL.&lt;/p&gt;
&lt;p&gt;I had worked on the client of this service in python and also wrote certain parts the migration client in java.&lt;/p&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="byzantine-fault-tolerance"&gt;
&lt;h2&gt;Byzantine Fault Tolerance&lt;/h2&gt;
&lt;p&gt;Zookeeper is not Byzantine Fault Tolerant. Author say for the production uses they have have not observed the failure
that could have been prevented by &lt;em&gt;then&lt;/em&gt; proposed systems to make Zookeeper Byzantine Fault Tolerant.&lt;/p&gt;
&lt;div class="youtube-video"&gt;
&lt;iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/dfsRQyYXOsQ?rel=0&amp;amp;wmode=transparent" frameborder="0" allow="encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;div class="section" id="chubby"&gt;
&lt;h2&gt;Chubby&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://static.googleusercontent.com/media/research.google.com/en//archive/chubby-osdi06.pdf"&gt;The Chubby lock service for loosely-coupled distributed systems&lt;/a&gt; By Mike Burrows, Google Inc&lt;/p&gt;
&lt;div class="admonition admonition-intended-use"&gt;
&lt;p class="first admonition-title"&gt;intended use&lt;/p&gt;
&lt;p class="last"&gt;It is intended for use within a loosely-coupled distributed system consisting
of moderately large numbers of small machines connected by a high-speed
network. For example, a Chubby instance (also known as a Chubby cell) might
serve ten thousand 4-processor machines connected by 1Gbit/s Ethernet. Most
Chubby cells are confined to a single data centre or machine room, though we do
run at least one Chubby cell whose replicas are separated by thousands of
kilometres.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition admonition-backup"&gt;
&lt;p class="first admonition-title"&gt;backup&lt;/p&gt;
&lt;p class="last"&gt;Every few hours, the master of each Chubby cell writes a snapshot of its
database to a GFS file server in a different building. The use of a
separate building ensures both that the backup will survive building damage,
and that the backups introduce no cyclic dependencies in the system; a GFS cell
in the same building potentially might rely on the Chubby cell for electing its
master.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>distributed systems</category><category>interviews</category><guid>http://www.xtoinfinity.com/posts/2020/02/15/reading-list-interviews.html</guid><pubDate>Sat, 15 Feb 2020 15:53:43 GMT</pubDate></item><item><title>Runway - A distributed systems analysis tool by Salesforce</title><link>http://www.xtoinfinity.com/posts/runway-a-distributed-systems-analysis-tool-by-salesforce.html</link><dc:creator>Senthil Kumaran</dc:creator><description>&lt;div&gt;&lt;p&gt;Diego Ongaro of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Raft_(computer_science)"&gt;Raft&lt;/a&gt; fame describes a tool that he has been working on at Salesforce. The tool &lt;a class="reference external" href="http://runway.systems"&gt;http://runway.systems&lt;/a&gt; is
intended to help the designers of distributed systems. The idea is, folks designing distributed systems can encode their
encode their model, specify the states of the system, specify the invariant and run the simulations in the tool.&lt;/p&gt;
&lt;p&gt;This tool will help in visualization and analysis of the distributed systems behavior under various conditions. Diego
states that such a system would have been really helpful to him when, if it was available, when he was writing Raft.&lt;/p&gt;
&lt;p&gt;In this approachable presentation, he illustrates the tool using.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A fictional, &lt;a class="reference external" href="https://github.com/salesforce/runway-model-toomanybananas"&gt;too many bananas problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Simulating an &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Elevator_algorithm"&gt;Elevator Control System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Simulation of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Raft_(computer_science)"&gt;Leader Election and Master Failures in Raft&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="youtube-video align-center"&gt;
&lt;iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/BAZHZG-8ayo?rel=0&amp;amp;wmode=transparent" frameborder="0" allow="encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>distributed systems</category><category>introduction</category><guid>http://www.xtoinfinity.com/posts/runway-a-distributed-systems-analysis-tool-by-salesforce.html</guid><pubDate>Fri, 30 Dec 2016 01:10:06 GMT</pubDate></item></channel></rss>