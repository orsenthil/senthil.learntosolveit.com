<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Senthil Kumaran's thoughts. (mathjax)</title><link>http://www.xtoinfinity.com/</link><description></description><atom:link href="http://www.xtoinfinity.com/categories/mathjax.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 04 Jan 2019 14:22:38 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Leslie Lamport on Teaching Concurrency</title><link>http://www.xtoinfinity.com/posts/leslie-lamport-on-teaching-concurrency.html</link><dc:creator>Senthil Kumaran</dc:creator><description>&lt;div&gt;&lt;p&gt;This post is a short discussion on the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Leslie_Lamport"&gt;Leslie Lamport&lt;/a&gt; 's paper "&lt;a class="reference external" href="http://research.microsoft.com/en-us/um/people/lamport/pubs/teaching-concurrency.pdf"&gt;Teaching Concurrency&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;Lamport's basic premise is that understanding the system the most important part, and engineers often muddy their
understanding with implementation details as soon as they start talking about programming languages suitable for
concurrency.&lt;/p&gt;
&lt;p&gt;He even challenges engineers to come up with the solution for concurrency problems without using "&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Semaphore_(programming)"&gt;semaphores&lt;/a&gt;",
"&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Monitor_(synchronization)"&gt;monitors&lt;/a&gt;", or any other construct that were invented and provided as a tool. Using those, he says, is like using the
'sort' to routine the language to implement a sorting algorithm.&lt;/p&gt;
&lt;blockquote&gt;
The modern field of concurrency started with Dijkstra’s 1965 paper on the mutual exclusion problem. For most of the
1970s, one “solved” the mutual exclusion problem by using semaphores or monitors or conditional critical regions or
some other language construct. This is like solving the sorting problem by using a programming language with a sort
command. Most of your colleagues can explain how to implement mutual exclusion using a semaphore. How many of them
can answer the following question: Can one implement mutual exclusion without using lower-level constructs that,
like semaphores, assume mutually exclusive access to a resource?&lt;/blockquote&gt;
&lt;p&gt;Lamport's approach to problem solving suggests, we need to think of computing problem as series of states instead of
series of steps. I think, series of steps tend to give some linearity the approach, while series of states tend to
indicate that sub-parts of the system can have multiple states and the next state each sub-part can take only depends
upon the current state and action that leads the state transition to the next state.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It is more useful to think about states than sequences of steps because what a computing device does next depends on
its current state, not on what steps it took in the past.&lt;/p&gt;
&lt;p&gt;To describe a computation we need to describe a sequence of states. More often, we need to describe the set of
computations that can be produced by some particular computing device, such as an algorithm. There is one method that
works in practice: describing a set of computations by&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;the set of all initial initial states and&lt;/li&gt;
&lt;li&gt;A next-state relation that describes, for every state, the possible next states that is, the set of states
reachable from that state by a single step.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;On computational thinking.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How should we describe computations?&lt;/p&gt;
&lt;p&gt;Most computer scientists would probably interpret this question to mean, what language should we use? Imagine an
art historian answering “how would you describe impressionist painting?” by saying “in French”.&lt;/p&gt;
&lt;p&gt;Programming and hardware-design languages don’t help an engineer understand what problem a system should solve.
Thinking of computations as sequences of states, rather than as something described by a language, is the first
step towards such understanding.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lamport also describes in great details about importance of problem specification. Sometimes, when the problem is
specified clearly and understood problem, the solution becomes easy.  Most of our struggles seems to be with coming to
grasp the problem specification.&lt;/p&gt;
&lt;blockquote&gt;
The great contribution of Dijkstra’s paper on mutual exclusion was not his solution; it was stating the problem.
(It is remarkable that, in this first paper on the subject, Dijkstra stated all the requirements that distinguish
mutual exclusion from fundamentally simpler and less interesting problems.)&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;On concurrency, itself&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;He gives an example of concurrency problem  that according to him is "trivial". It took me some reading to understand
the problem. &lt;a class="reference external" href="http://stackoverflow.com/questions/24989756/what-is-the-inductive-invariant-of-the-simple-concurrent-program"&gt;StackOverflow.com&lt;/a&gt; certainly helped.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Once an engineer understands what a computation is and how it is described, she can understand the most important
concept in concurrency: invariance. A computing device does the correct thing only because it maintains a correct
state. Correctness of the state is expressed by an invariant—a predicate that is true in every state of every
computation.&lt;/p&gt;
&lt;p&gt;Invariance is the key to understanding concurrent systems, but few engineers or computer scientists have learned to
think in terms of invariants. Here is a simple example.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Now, the problem&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Consider N processes numbered from 0 through N − 1 in which each process i executes&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
x[i] :=1;
\end{equation*}
&lt;/div&gt;
&lt;div class="math"&gt;
\begin{equation*}

y[i] := x[(i-1)modN]
\end{equation*}
&lt;/div&gt;
&lt;p&gt;and stops, where each &lt;span class="math"&gt;\(x[i]\)&lt;/span&gt; initially equals 0. (The reads and writes of each &lt;span class="math"&gt;\(x[i]\)&lt;/span&gt; are assumed to be
atomic.)&lt;/p&gt;
&lt;p&gt;This algorithm satisfies the following property: after every process has stopped, &lt;span class="math"&gt;\(y[i]\)&lt;/span&gt; equals 1 for at least
one process &lt;span class="math"&gt;\(i\)&lt;/span&gt; .&lt;/p&gt;
&lt;p&gt;It is easy to see that the algorithm satisfies this property; the last process &lt;span class="math"&gt;\(i\)&lt;/span&gt; to write &lt;span class="math"&gt;\(y[i]\)&lt;/span&gt; must set
it to 1. But that process doesnt set &lt;span class="math"&gt;\(y[i]\)&lt;/span&gt; to 1 because it was the last process to write y.&lt;/p&gt;
&lt;p&gt;What a process does depends only on the current state, not on what processes wrote before it. The algorithm satisfies
this property because it maintains an inductive invariant.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Explanation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The explanation on how &lt;span class="math"&gt;\(y[i]\)&lt;/span&gt; equals for 1 at least one process &lt;span class="math"&gt;\(i\)&lt;/span&gt; goes like this.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The &lt;span class="math"&gt;\(x_s\)&lt;/span&gt; model the following behavior: &lt;span class="math"&gt;\(x[i]\)&lt;/span&gt; is 1 if and only if the process &lt;span class="math"&gt;\(i\)&lt;/span&gt; has already run.&lt;/li&gt;
&lt;li&gt;After all processes have completed, all &lt;span class="math"&gt;\(x_s\)&lt;/span&gt; are thus set to 1.&lt;/li&gt;
&lt;li&gt;The &lt;span class="math"&gt;\(y_s\)&lt;/span&gt; are a bit trickier: &lt;span class="math"&gt;\(y[i]\)&lt;/span&gt; is set if &lt;span class="math"&gt;\(x[i-1]\)&lt;/span&gt; was set, that is, &lt;span class="math"&gt;\(y[i]\)&lt;/span&gt; is 1 if and
only if the predecessor of &lt;span class="math"&gt;\(i\)&lt;/span&gt; had already run when &lt;span class="math"&gt;\(i\)&lt;/span&gt; was doing its write to &lt;span class="math"&gt;\(y\)&lt;/span&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I essentially to had resort to &lt;a class="reference external" href="http://stackoverflow.com/questions/24989756/what-is-the-inductive-invariant-of-the-simple-concurrent-program"&gt;StackOverflow.com&lt;/a&gt; post author's explanation to completely understand this.&lt;/p&gt;
&lt;p&gt;The program invariant is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If a process has set &lt;span class="math"&gt;\(y[i]\)&lt;/span&gt;, it must already have set &lt;span class="math"&gt;\(x[i]\)&lt;/span&gt; to 1.
This is true regardless whether &lt;span class="math"&gt;\(y[i]\)&lt;/span&gt; is set to 0 or 1.&lt;/p&gt;
&lt;p&gt;Proving this invariant is quite easy: In the beginning, none of the &lt;span class="math"&gt;\(y_s\)&lt;/span&gt; is set, so it holds trivially.
During program execution, each write to &lt;span class="math"&gt;\(y[i]\)&lt;/span&gt; is &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Sequence_point"&gt;sequenced after&lt;/a&gt; a write to &lt;span class="math"&gt;\(x[i]\)&lt;/span&gt;. Therefore
the invariant also holds for every step of the program afterwards.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The further reasoning goes like this.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The last process to finish sets &lt;span class="math"&gt;\(y[i]\)&lt;/span&gt; to 1 because, by definition of being the last process, its
predecessor must have already finished execution at that point (ie. its y value is already set).&lt;/p&gt;
&lt;p&gt;Which means, because of the invariant, its &lt;span class="math"&gt;\(x\)&lt;/span&gt; value (which determines the last process' &lt;span class="math"&gt;\(y\)&lt;/span&gt; value)
has to be 1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The alternate way to look at this problem can give some intuitive understanding too.&lt;/p&gt;
&lt;blockquote&gt;
You cannot find an execution order in which all &lt;span class="math"&gt;\(y_s\)&lt;/span&gt; are set to 0. Doing so would require all processes to
execute before their predecessor. However, since our processes are arranged in a ring (that is, if I follow the
predecessor chain I will eventually end up at my starting point again), this leads to the contradiction that at
least one process must have finished executing before it wrote to &lt;span class="math"&gt;\(y\)&lt;/span&gt;.&lt;/blockquote&gt;
&lt;p&gt;To understand this concurrency problem, it requires some notion of syntax, a prior understanding of proving hypothesis,
and possibly discussing the problem and solution.&lt;/p&gt;
&lt;p&gt;Trying to understand itself, I guess, is a progress.&lt;/p&gt;&lt;/div&gt;</description><category>mathjax</category><guid>http://www.xtoinfinity.com/posts/leslie-lamport-on-teaching-concurrency.html</guid><pubDate>Wed, 21 Dec 2016 03:17:54 GMT</pubDate></item><item><title>Abstract Factory - Design Pattern Explanation</title><link>http://www.xtoinfinity.com/posts/abstract-factory-design-pattern-explanation.html</link><dc:creator>Senthil Kumaran</dc:creator><description>&lt;div&gt;&lt;p&gt;Design patterns like "Decorator", "Singleton" are common and be easily
recognized. The "Builder" pattern is also recognizable whenever you use Java's
&lt;cite&gt;StringBuilder&lt;/cite&gt; class.&lt;/p&gt;
&lt;p&gt;Some patterns which are commonly used by frameworks are not easily recognizable
unless you are a framework author.  Recently, I spent time trying to recognize
and understand &lt;em&gt;Abstract Factory&lt;/em&gt; design pattern.&lt;/p&gt;
&lt;p&gt;In this post, we will look at "Abstract Factory" and explain it with an
example. I consulted multiple resources, and ultimately to gain confidence, I
had to rely upon &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Design_Patterns"&gt;The Gang of Four&lt;/a&gt; &lt;a class="footnote-reference" href="http://www.xtoinfinity.com/posts/abstract-factory-design-pattern-explanation.html#id1" id="id2"&gt;[1]&lt;/a&gt; design patterns book.&lt;/p&gt;
&lt;p&gt;This post is intended as refresher for a reader who has read the &lt;strong&gt;Gang of
Four&lt;/strong&gt; chapter on Abstract Factory. This post presents an example which the
reader can relate to in the modern world.&lt;/p&gt;
&lt;p&gt;Abstract Factory is a Factory for Factories. To understand this, you will first
have to understand the Factory Design pattern, which encapsulates creation of
objects. Factory pattern is recognized when instead of using &lt;cite&gt;new SomeClass()&lt;/cite&gt;
we call &lt;cite&gt;SomeClass.createObject()&lt;/cite&gt; static method. The advantage is &lt;cite&gt;SomeClass&lt;/cite&gt;
is independent of your code, it could be supplied as a dependency from someone
else and you simply use the factory. The person controlling the factory can
modify the object creation process.&lt;/p&gt;
&lt;p&gt;For example, &lt;cite&gt;SomeClass.createObject()&lt;/cite&gt; in version1, can be return &lt;cite&gt;new
SomeClass(arg1)&lt;/cite&gt; and in version2, it can change to &lt;cite&gt;return new SomeClass(arg1,
arg2)&lt;/cite&gt; with you as the caller, invoking the object creation entirely as
&lt;cite&gt;SomeClass.createObject()&lt;/cite&gt; unaffected by the change made by the creator of
SomeClass.&lt;/p&gt;
&lt;p&gt;Factory pattern is easy to understand. The next step comes in dealing with
Abstract Factory.&lt;/p&gt;
&lt;div class="section" id="intent"&gt;
&lt;h2&gt;Intent&lt;/h2&gt;
&lt;p&gt;Abstract Factory provides an interface for creating families of related or
dependent objects without specifying the concrete classes.&lt;/p&gt;
&lt;div class="section" id="canonical-design"&gt;
&lt;h3&gt;Canonical Design&lt;/h3&gt;
&lt;img alt="https://dl.dropbox.com/s/3o1opat3zd7c569/Screenshot%202016-07-11%2023.04.02.png" src="https://dl.dropbox.com/s/3o1opat3zd7c569/Screenshot%202016-07-11%2023.04.02.png"&gt;
&lt;p&gt;Factory is a class that defers the instantiation of the object to the
subclass.Factory encapsulates the decision-making that figures out which
specific subclass to instantiate. There are three different kinds of Factory
patterns observable with respect to object instantiation.&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;strong&gt;Simple Factory.&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;The client directly uses a static method of a subclass, to instantiate an object.&lt;/dd&gt;
&lt;dt&gt;&lt;strong&gt;Factory Pattern&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;The client uses a Factory class to create an object. A Factory, is a class that defers the instantiation of an
object to the subclasses.Factory method creates only one product&lt;/dd&gt;
&lt;dt&gt;&lt;strong&gt;Abstract Factory&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Abstract Factory is a constructional design pattern that is used to create a family of related products.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Abstract Factory is applicable when the&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;System should be configured with one of multiple families of Products.&lt;/li&gt;
&lt;li&gt;The family of related product objects is designed to to used together and we need to enforce this constraint.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="design-problem"&gt;
&lt;h2&gt;Design Problem&lt;/h2&gt;
&lt;p&gt;In this problem, we are trying to design a "Operating System Installer" for
Unix family of Operating Systems. We know there are two popular variants of
&lt;strong&gt;Unix&lt;/strong&gt;, there popular operating system with &lt;strong&gt;Linux kernel&lt;/strong&gt; and related
application stack, and there is &lt;strong&gt;BSD&lt;/strong&gt; systems.&lt;/p&gt;
&lt;p&gt;Each Operating System will consists of components like&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Bootloader&lt;/li&gt;
&lt;li&gt;Kernel&lt;/li&gt;
&lt;li&gt;Shell&lt;/li&gt;
&lt;li&gt;DisplayManager&lt;/li&gt;
&lt;li&gt;WindowManager&lt;/li&gt;
&lt;li&gt;Applications&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The installer will have to abstract those components and help the client create an &lt;strong&gt;Unix&lt;/strong&gt; operating system choice.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Correspondence with Canonical Design&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="https://dl.dropbox.com/s/wmnawrv6h3rxx4u/Screenshot%202016-07-12%2002.15.48.png" src="https://dl.dropbox.com/s/wmnawrv6h3rxx4u/Screenshot%202016-07-12%2002.15.48.png"&gt;
&lt;p&gt;Let's look at each of these in some detail.&lt;/p&gt;
&lt;div class="section" id="product-interfaces"&gt;
&lt;h3&gt;Product Interfaces&lt;/h3&gt;
&lt;p&gt;Starting with products, these are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Bootloader&lt;/li&gt;
&lt;li&gt;Kernel&lt;/li&gt;
&lt;li&gt;Shell&lt;/li&gt;
&lt;li&gt;DisplayManager&lt;/li&gt;
&lt;li&gt;WindowManager&lt;/li&gt;
&lt;li&gt;BaseApplications&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will have &lt;strong&gt;Interfaces&lt;/strong&gt; for the products.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IBootLoader.java.html"&gt;java/abstractfactory/IBootLoader.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IBootLoader.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_4ff7c8d4460e495d97c47e7140e2c21b-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IBootLoader&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_4ff7c8d4460e495d97c47e7140e2c21b-2"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_4ff7c8d4460e495d97c47e7140e2c21b-3"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * Boot up the System Image.&lt;/span&gt;
&lt;a name="rest_code_4ff7c8d4460e495d97c47e7140e2c21b-4"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     */&lt;/span&gt;
&lt;a name="rest_code_4ff7c8d4460e495d97c47e7140e2c21b-5"&gt;&lt;/a&gt;    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;bootUp&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_4ff7c8d4460e495d97c47e7140e2c21b-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IKernel.java.html"&gt;java/abstractfactory/IKernel.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IKernel.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_337f1baecdc240efad3509a21a160dd4-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IKernel&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_337f1baecdc240efad3509a21a160dd4-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_337f1baecdc240efad3509a21a160dd4-3"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_337f1baecdc240efad3509a21a160dd4-4"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * Load the kernel on top of the system image.&lt;/span&gt;
&lt;a name="rest_code_337f1baecdc240efad3509a21a160dd4-5"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     */&lt;/span&gt;
&lt;a name="rest_code_337f1baecdc240efad3509a21a160dd4-6"&gt;&lt;/a&gt;    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loadKernel&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_337f1baecdc240efad3509a21a160dd4-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IShell.java.html"&gt;java/abstractfactory/IShell.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IShell.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_abf901068d7c4ec8a6c507fac471a131-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IShell&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_abf901068d7c4ec8a6c507fac471a131-2"&gt;&lt;/a&gt;    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loadShell&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_abf901068d7c4ec8a6c507fac471a131-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IDisplayManager.java.html"&gt;java/abstractfactory/IDisplayManager.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IDisplayManager.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_0d91c645438741c9af3fa68f14873d1b-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IDisplayManager&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_0d91c645438741c9af3fa68f14873d1b-2"&gt;&lt;/a&gt;    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;installDisplayManager&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_0d91c645438741c9af3fa68f14873d1b-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IWindowManager.java.html"&gt;java/abstractfactory/IWindowManager.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IWindowManager.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_df9fc2236681448cb328da81bc32419a-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IWindowManager&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_df9fc2236681448cb328da81bc32419a-2"&gt;&lt;/a&gt;    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;installWindowManager&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_df9fc2236681448cb328da81bc32419a-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IBaseApplications.java.html"&gt;java/abstractfactory/IBaseApplications.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IBaseApplications.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_b9ed3a32fd5b4b9eb2afd47d18319c16-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IBaseApplications&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b9ed3a32fd5b4b9eb2afd47d18319c16-2"&gt;&lt;/a&gt;    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;installApplications&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_b9ed3a32fd5b4b9eb2afd47d18319c16-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="concrete-products"&gt;
&lt;h3&gt;Concrete Products&lt;/h3&gt;
&lt;p&gt;Each of these can create many difference concrete products. For the different
concrete products like&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Bootloader&lt;ul&gt;
&lt;li&gt;BSDBootLoader&lt;/li&gt;
&lt;li&gt;LinuxBootLoader&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Kernel&lt;ul&gt;
&lt;li&gt;BSDKernel&lt;/li&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Shell&lt;ul&gt;
&lt;li&gt;BASH&lt;/li&gt;
&lt;li&gt;CShell&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DisplayManager&lt;ul&gt;
&lt;li&gt;X11&lt;/li&gt;
&lt;li&gt;WayLand&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WindowManager&lt;ul&gt;
&lt;li&gt;Gnome&lt;/li&gt;
&lt;li&gt;KDE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;BaseApplications&lt;ul&gt;
&lt;li&gt;SystemVUnix&lt;/li&gt;
&lt;li&gt;GNUApplications&lt;/li&gt;
&lt;li&gt;ProprietaryApps&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's denote these concrete products in code that can be instantiated.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/BSDBootLoader.java.html"&gt;java/abstractfactory/BSDBootLoader.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/BSDBootLoader.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_04b6d626b27a40bda418f7077ba8c168-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BSDBootLoader&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IBootLoader&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_04b6d626b27a40bda418f7077ba8c168-2"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_04b6d626b27a40bda418f7077ba8c168-3"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * Boot up the System Image.&lt;/span&gt;
&lt;a name="rest_code_04b6d626b27a40bda418f7077ba8c168-4"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     */&lt;/span&gt;
&lt;a name="rest_code_04b6d626b27a40bda418f7077ba8c168-5"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_04b6d626b27a40bda418f7077ba8c168-6"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;bootUp&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_04b6d626b27a40bda418f7077ba8c168-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Booting: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;a name="rest_code_04b6d626b27a40bda418f7077ba8c168-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_04b6d626b27a40bda418f7077ba8c168-9"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_04b6d626b27a40bda418f7077ba8c168-10"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/BSDKernel.java.html"&gt;java/abstractfactory/BSDKernel.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/BSDKernel.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_47ab7a167e5b4a7a8e7644994fc4b72d-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BSDKernel&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IKernel&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_47ab7a167e5b4a7a8e7644994fc4b72d-2"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_47ab7a167e5b4a7a8e7644994fc4b72d-3"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * Load the kernel on top of the system image.&lt;/span&gt;
&lt;a name="rest_code_47ab7a167e5b4a7a8e7644994fc4b72d-4"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     */&lt;/span&gt;
&lt;a name="rest_code_47ab7a167e5b4a7a8e7644994fc4b72d-5"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_47ab7a167e5b4a7a8e7644994fc4b72d-6"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loadKernel&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_47ab7a167e5b4a7a8e7644994fc4b72d-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Loading: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;a name="rest_code_47ab7a167e5b4a7a8e7644994fc4b72d-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_47ab7a167e5b4a7a8e7644994fc4b72d-9"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_47ab7a167e5b4a7a8e7644994fc4b72d-10"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/Bash.java.html"&gt;java/abstractfactory/Bash.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/Bash.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_2f2f1e9a2cb8424e8a54e94c193ca38c-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Bash&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IShell&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_2f2f1e9a2cb8424e8a54e94c193ca38c-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_2f2f1e9a2cb8424e8a54e94c193ca38c-3"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_2f2f1e9a2cb8424e8a54e94c193ca38c-4"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loadShell&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_2f2f1e9a2cb8424e8a54e94c193ca38c-5"&gt;&lt;/a&gt;        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Loading: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;a name="rest_code_2f2f1e9a2cb8424e8a54e94c193ca38c-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_2f2f1e9a2cb8424e8a54e94c193ca38c-7"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2f2f1e9a2cb8424e8a54e94c193ca38c-8"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/CShell.java.html"&gt;java/abstractfactory/CShell.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/CShell.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_2166ce434d4a4256b4d9e90e068fa656-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CShell&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IShell&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_2166ce434d4a4256b4d9e90e068fa656-2"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_2166ce434d4a4256b4d9e90e068fa656-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loadShell&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_2166ce434d4a4256b4d9e90e068fa656-4"&gt;&lt;/a&gt;        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Loading: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;a name="rest_code_2166ce434d4a4256b4d9e90e068fa656-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_2166ce434d4a4256b4d9e90e068fa656-6"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2166ce434d4a4256b4d9e90e068fa656-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/GNUApplications.java.html"&gt;java/abstractfactory/GNUApplications.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/GNUApplications.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_2b14d80777074400ab55f17415248a12-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;GNUApplications&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IBaseApplications&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_2b14d80777074400ab55f17415248a12-2"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_2b14d80777074400ab55f17415248a12-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;installApplications&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_2b14d80777074400ab55f17415248a12-4"&gt;&lt;/a&gt;        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Installing: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;a name="rest_code_2b14d80777074400ab55f17415248a12-5"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2b14d80777074400ab55f17415248a12-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/Gnome.java.html"&gt;java/abstractfactory/Gnome.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/Gnome.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_0f78b7caf2d54743a33324999dc5df12-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Gnome&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IWindowManager&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_0f78b7caf2d54743a33324999dc5df12-2"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_0f78b7caf2d54743a33324999dc5df12-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;installWindowManager&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_0f78b7caf2d54743a33324999dc5df12-4"&gt;&lt;/a&gt;        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Installing: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;a name="rest_code_0f78b7caf2d54743a33324999dc5df12-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_0f78b7caf2d54743a33324999dc5df12-6"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_0f78b7caf2d54743a33324999dc5df12-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/KDE.java.html"&gt;java/abstractfactory/KDE.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/KDE.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_c266a1f850fa4720a055c38c16e802f4-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;KDE&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IWindowManager&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_c266a1f850fa4720a055c38c16e802f4-2"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_c266a1f850fa4720a055c38c16e802f4-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;installWindowManager&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_c266a1f850fa4720a055c38c16e802f4-4"&gt;&lt;/a&gt;        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Installing: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;a name="rest_code_c266a1f850fa4720a055c38c16e802f4-5"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_c266a1f850fa4720a055c38c16e802f4-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/Linux.java.html"&gt;java/abstractfactory/Linux.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/Linux.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_439072f5596e4594819a44058f59ccb6-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Linux&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IKernel&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_439072f5596e4594819a44058f59ccb6-2"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_439072f5596e4594819a44058f59ccb6-3"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * Load the kernel on top of the system image.&lt;/span&gt;
&lt;a name="rest_code_439072f5596e4594819a44058f59ccb6-4"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     */&lt;/span&gt;
&lt;a name="rest_code_439072f5596e4594819a44058f59ccb6-5"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_439072f5596e4594819a44058f59ccb6-6"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loadKernel&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_439072f5596e4594819a44058f59ccb6-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Loading: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;a name="rest_code_439072f5596e4594819a44058f59ccb6-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_439072f5596e4594819a44058f59ccb6-9"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_439072f5596e4594819a44058f59ccb6-10"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/LinuxBootLoader.java.html"&gt;java/abstractfactory/LinuxBootLoader.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/LinuxBootLoader.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_ce1f29fa68d141db89d6e683a4290863-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LinuxBootLoader&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IBootLoader&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_ce1f29fa68d141db89d6e683a4290863-2"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_ce1f29fa68d141db89d6e683a4290863-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;bootUp&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_ce1f29fa68d141db89d6e683a4290863-4"&gt;&lt;/a&gt;        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Booting: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;a name="rest_code_ce1f29fa68d141db89d6e683a4290863-5"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_ce1f29fa68d141db89d6e683a4290863-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/ProprietaryApps.java.html"&gt;java/abstractfactory/ProprietaryApps.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/ProprietaryApps.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_c8034244ca9b450d8cfa11ad8f2786a0-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProprietaryApps&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IBaseApplications&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_c8034244ca9b450d8cfa11ad8f2786a0-2"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_c8034244ca9b450d8cfa11ad8f2786a0-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;installApplications&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_c8034244ca9b450d8cfa11ad8f2786a0-4"&gt;&lt;/a&gt;        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Installing: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;a name="rest_code_c8034244ca9b450d8cfa11ad8f2786a0-5"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_c8034244ca9b450d8cfa11ad8f2786a0-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/SystemVUnix.java.html"&gt;java/abstractfactory/SystemVUnix.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/SystemVUnix.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_ea54f708113c4bd58ef113a56ea2e842-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SystemVUnix&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IBaseApplications&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_ea54f708113c4bd58ef113a56ea2e842-2"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_ea54f708113c4bd58ef113a56ea2e842-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;installApplications&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_ea54f708113c4bd58ef113a56ea2e842-4"&gt;&lt;/a&gt;        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Installing: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;a name="rest_code_ea54f708113c4bd58ef113a56ea2e842-5"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_ea54f708113c4bd58ef113a56ea2e842-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/WayLand.java.html"&gt;java/abstractfactory/WayLand.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/WayLand.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_887b6314bc1341e7a55658e12e953ed9-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WayLand&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IDisplayManager&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_887b6314bc1341e7a55658e12e953ed9-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_887b6314bc1341e7a55658e12e953ed9-3"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_887b6314bc1341e7a55658e12e953ed9-4"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;installDisplayManager&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_887b6314bc1341e7a55658e12e953ed9-5"&gt;&lt;/a&gt;        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Installing: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;a name="rest_code_887b6314bc1341e7a55658e12e953ed9-6"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_887b6314bc1341e7a55658e12e953ed9-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_887b6314bc1341e7a55658e12e953ed9-8"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/X11.java.html"&gt;java/abstractfactory/X11.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/X11.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_3537337079e64ec9aac39a12e9ecf828-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;X11&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IDisplayManager&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_3537337079e64ec9aac39a12e9ecf828-2"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_3537337079e64ec9aac39a12e9ecf828-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;installDisplayManager&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_3537337079e64ec9aac39a12e9ecf828-4"&gt;&lt;/a&gt;        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Installing: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getClass&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSimpleName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;a name="rest_code_3537337079e64ec9aac39a12e9ecf828-5"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_3537337079e64ec9aac39a12e9ecf828-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="factories"&gt;
&lt;h3&gt;Factories&lt;/h3&gt;
&lt;p&gt;The products are created by &lt;strong&gt;Factories&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;BSDFactory&lt;/li&gt;
&lt;li&gt;LinuxFactory&lt;/li&gt;
&lt;li&gt;UbuntuFactory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/BSDFactory.java.html"&gt;java/abstractfactory/BSDFactory.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/BSDFactory.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BSDFactory&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IUnixFactory&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-2"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IBootLoader&lt;/span&gt; &lt;span class="nf"&gt;installBootLoader&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-4"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BSDBootLoader&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-5"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-7"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-8"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IKernel&lt;/span&gt; &lt;span class="nf"&gt;installKernel&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-9"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BSDKernel&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-10"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-12"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-13"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IShell&lt;/span&gt; &lt;span class="nf"&gt;installShell&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-14"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;CShell&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-15"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-17"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-18"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IDisplayManager&lt;/span&gt; &lt;span class="nf"&gt;installDisplayManager&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-19"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;X11&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-20"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-21"&gt;&lt;/a&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-22"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-23"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IWindowManager&lt;/span&gt; &lt;span class="nf"&gt;installWindowManager&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-24"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;KDE&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-25"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-26"&gt;&lt;/a&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-27"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-28"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IBaseApplications&lt;/span&gt; &lt;span class="nf"&gt;installApps&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-29"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;SystemVUnix&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-30"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_a0ee6972d568430d97ff2badd530f5ea-31"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/LinuxFactory.java.html"&gt;java/abstractfactory/LinuxFactory.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/LinuxFactory.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LinuxFactory&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;IUnixFactory&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-2"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IBootLoader&lt;/span&gt; &lt;span class="nf"&gt;installBootLoader&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-4"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinuxBootLoader&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-5"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-7"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-8"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IKernel&lt;/span&gt; &lt;span class="nf"&gt;installKernel&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-9"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-10"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-12"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-13"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IShell&lt;/span&gt; &lt;span class="nf"&gt;installShell&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-14"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Bash&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-15"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-17"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-18"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IDisplayManager&lt;/span&gt; &lt;span class="nf"&gt;installDisplayManager&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-19"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;X11&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-20"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-21"&gt;&lt;/a&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-22"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-23"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IWindowManager&lt;/span&gt; &lt;span class="nf"&gt;installWindowManager&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-24"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Gnome&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-25"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-26"&gt;&lt;/a&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-27"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-28"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IBaseApplications&lt;/span&gt; &lt;span class="nf"&gt;installApps&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-29"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;GNUApplications&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-30"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_c0a9ede80abf4af299dff721efa5cdc6-31"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/UbuntuFactory.java.html"&gt;java/abstractfactory/UbuntuFactory.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/UbuntuFactory.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_cb856c2698874d8587a96064181078af-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UbuntuFactory&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;LinuxFactory&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_cb856c2698874d8587a96064181078af-2"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_cb856c2698874d8587a96064181078af-3"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IDisplayManager&lt;/span&gt; &lt;span class="nf"&gt;installDisplayManager&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_cb856c2698874d8587a96064181078af-4"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;X11&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_cb856c2698874d8587a96064181078af-5"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_cb856c2698874d8587a96064181078af-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_cb856c2698874d8587a96064181078af-7"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;a name="rest_code_cb856c2698874d8587a96064181078af-8"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IBaseApplications&lt;/span&gt; &lt;span class="nf"&gt;installApps&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_cb856c2698874d8587a96064181078af-9"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ProprietaryApps&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_cb856c2698874d8587a96064181078af-10"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_cb856c2698874d8587a96064181078af-11"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="abstract-factory"&gt;
&lt;h3&gt;Abstract Factory&lt;/h3&gt;
&lt;p&gt;The factories will implement an &lt;strong&gt;abstraction&lt;/strong&gt; provided by the &lt;strong&gt;Abstract Factory&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IUnixFactory.java.html"&gt;java/abstractfactory/IUnixFactory.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/IUnixFactory.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_5db15491d3e7493f8649a84a979f0d89-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IUnixFactory&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_5db15491d3e7493f8649a84a979f0d89-2"&gt;&lt;/a&gt;    &lt;span class="n"&gt;IBootLoader&lt;/span&gt; &lt;span class="nf"&gt;installBootLoader&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_5db15491d3e7493f8649a84a979f0d89-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;IKernel&lt;/span&gt; &lt;span class="nf"&gt;installKernel&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_5db15491d3e7493f8649a84a979f0d89-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;IShell&lt;/span&gt; &lt;span class="nf"&gt;installShell&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_5db15491d3e7493f8649a84a979f0d89-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;IDisplayManager&lt;/span&gt;  &lt;span class="nf"&gt;installDisplayManager&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_5db15491d3e7493f8649a84a979f0d89-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;IWindowManager&lt;/span&gt; &lt;span class="nf"&gt;installWindowManager&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_5db15491d3e7493f8649a84a979f0d89-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;IBaseApplications&lt;/span&gt; &lt;span class="nf"&gt;installApps&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_5db15491d3e7493f8649a84a979f0d89-8"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="client"&gt;
&lt;h3&gt;Client&lt;/h3&gt;
&lt;p&gt;The design is best understood from the view of the client  which uses the
&lt;strong&gt;Abstract Factory&lt;/strong&gt;  to the create the products.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/OperatingSystem.java.html"&gt;java/abstractfactory/OperatingSystem.java&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/java/abstractfactory/OperatingSystem.java"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code java"&gt;&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OperatingSystem&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-2"&gt;&lt;/a&gt;    &lt;span class="n"&gt;IUnixFactory&lt;/span&gt; &lt;span class="n"&gt;unixFactory&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-4"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;OperatingSystem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IUnixFactory&lt;/span&gt; &lt;span class="n"&gt;unixFactory&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-5"&gt;&lt;/a&gt;        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;unixFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unixFactory&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-6"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-8"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-9"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * installerClient uses only the interfaces declared by AbstractFactory (IUnixFactory) and AbstractProduct&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-10"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * (IBootLoader, IKernel, IShell, IDisplayManager, IWindowManager, IBaseApplications) classes.&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-11"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     */&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-12"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;installerClient&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-13"&gt;&lt;/a&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;IBootLoader&lt;/span&gt; &lt;span class="n"&gt;bootLoader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unixFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;installBootLoader&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;IKernel&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unixFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;installKernel&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-17"&gt;&lt;/a&gt;        &lt;span class="n"&gt;IShell&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unixFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;installShell&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-18"&gt;&lt;/a&gt;        &lt;span class="n"&gt;IDisplayManager&lt;/span&gt; &lt;span class="n"&gt;displayManager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unixFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;installDisplayManager&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-19"&gt;&lt;/a&gt;        &lt;span class="n"&gt;IWindowManager&lt;/span&gt; &lt;span class="n"&gt;windowManager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unixFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;installWindowManager&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-20"&gt;&lt;/a&gt;        &lt;span class="n"&gt;IBaseApplications&lt;/span&gt; &lt;span class="n"&gt;applications&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unixFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;installApps&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-21"&gt;&lt;/a&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-22"&gt;&lt;/a&gt;        &lt;span class="n"&gt;bootLoader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;bootUp&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-23"&gt;&lt;/a&gt;        &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;loadKernel&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-24"&gt;&lt;/a&gt;        &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;loadShell&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-25"&gt;&lt;/a&gt;        &lt;span class="n"&gt;displayManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;installDisplayManager&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-26"&gt;&lt;/a&gt;        &lt;span class="n"&gt;windowManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;installWindowManager&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-27"&gt;&lt;/a&gt;        &lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;installApplications&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-28"&gt;&lt;/a&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-29"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-30"&gt;&lt;/a&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-31"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-32"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * client will not know the&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-33"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * products the type of bootloader, kernel, shell, display, window manager or applications.&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-34"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * That is encapsulated in factory used by the client.&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-35"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     *&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-36"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     */&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-37"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;factoryClient&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IUnixFactory&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-38"&gt;&lt;/a&gt;        &lt;span class="n"&gt;OperatingSystem&lt;/span&gt; &lt;span class="n"&gt;operatingSystem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;OperatingSystem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-39"&gt;&lt;/a&gt;        &lt;span class="n"&gt;operatingSystem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;installerClient&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-40"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-41"&gt;&lt;/a&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-42"&gt;&lt;/a&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-43"&gt;&lt;/a&gt;        &lt;span class="n"&gt;IUnixFactory&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-44"&gt;&lt;/a&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-45"&gt;&lt;/a&gt;        &lt;span class="n"&gt;factory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinuxFactory&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-46"&gt;&lt;/a&gt;        &lt;span class="n"&gt;factoryClient&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-47"&gt;&lt;/a&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-48"&gt;&lt;/a&gt;        &lt;span class="n"&gt;factory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BSDFactory&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-49"&gt;&lt;/a&gt;        &lt;span class="n"&gt;factoryClient&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-50"&gt;&lt;/a&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-51"&gt;&lt;/a&gt;        &lt;span class="n"&gt;factory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;UbuntuFactory&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-52"&gt;&lt;/a&gt;        &lt;span class="n"&gt;factoryClient&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-53"&gt;&lt;/a&gt;    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-54"&gt;&lt;/a&gt;
&lt;a name="rest_code_879ef6417f6847618dfcbc3dcd4999d8-55"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The execution looks like this.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-1"&gt;&lt;/a&gt;Booting: LinuxBootLoader
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-2"&gt;&lt;/a&gt;Loading: Linux
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-3"&gt;&lt;/a&gt;Loading: Bash
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-4"&gt;&lt;/a&gt;Installing: X11
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-5"&gt;&lt;/a&gt;Installing: Gnome
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-6"&gt;&lt;/a&gt;Installing: GNUApplications
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-8"&gt;&lt;/a&gt;Booting: BSDBootLoader
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-9"&gt;&lt;/a&gt;Loading: BSDKernel
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-10"&gt;&lt;/a&gt;Loading: CShell
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-11"&gt;&lt;/a&gt;Installing: X11
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-12"&gt;&lt;/a&gt;Installing: KDE
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-13"&gt;&lt;/a&gt;Installing: SystemVUnix
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-15"&gt;&lt;/a&gt;Booting: LinuxBootLoader
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-16"&gt;&lt;/a&gt;Loading: Linux
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-17"&gt;&lt;/a&gt;Loading: Bash
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-18"&gt;&lt;/a&gt;Installing: X11
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-19"&gt;&lt;/a&gt;Installing: Gnome
&lt;a name="rest_code_4ff52aa37a8c4c6c9a69b16999b40806-20"&gt;&lt;/a&gt;Installing: ProprietaryApps
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="tabulated-correspondence"&gt;
&lt;h3&gt;Tabulated Correspondence&lt;/h3&gt;
&lt;p&gt;Mapping of the code with various elements in the design helps us to appreciate this pattern.&lt;/p&gt;
&lt;img alt="https://dl.dropbox.com/s/ahu9pj89qtt7pos/Screenshot%202016-07-27%2008.57.29.png" src="https://dl.dropbox.com/s/ahu9pj89qtt7pos/Screenshot%202016-07-27%2008.57.29.png"&gt;
&lt;p&gt;Hope this was useful. If you have any comments on this article, please add your
thoughts in the comments section of this article.&lt;/p&gt;
&lt;p&gt;Thank you for reading!&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="http://www.xtoinfinity.com/posts/abstract-factory-design-pattern-explanation.html#id2"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Design_Patterns"&gt;https://en.wikipedia.org/wiki/Design_Patterns&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>java</category><category>mathjax</category><guid>http://www.xtoinfinity.com/posts/abstract-factory-design-pattern-explanation.html</guid><pubDate>Fri, 15 Jul 2016 16:28:06 GMT</pubDate></item><item><title>The Man Who Knew Infinity</title><link>http://www.xtoinfinity.com/posts/the-man-who-knew-infinity.html</link><dc:creator>Senthil Kumaran</dc:creator><description>&lt;div&gt;&lt;blockquote&gt;
"An equation for me has no meaning, unless it represents a thought of God." - Srinivasa Ramanujan&lt;/blockquote&gt;
&lt;p&gt;"The man who knew infinity" is the story of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Srinivasa_Ramanujan"&gt;Srinivasa Ramanujan&lt;/a&gt;. This phrase, associated with Ramanujan should be
familiar to many due to a &lt;a class="reference external" href="http://www.amazon.com/Man-Who-Knew-Infinity-Ramanujan/dp/B00C7F17OE/"&gt;very popular book&lt;/a&gt; with the same title. There is a motion picture directed by Matt Brown
based upon this book.&lt;/p&gt;
&lt;p&gt;I watched his movie on a Saturday at Berkeley. I was excited to listen to the QA with the director, and Mathematicians
such as &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Richard_Borcherds"&gt;Richard Borcheds&lt;/a&gt; , &lt;a class="reference external" href="http://www.cs.berkeley.edu/~oholtz/"&gt;Olga Holz&lt;/a&gt; and &lt;a class="reference external" href="https://math.berkeley.edu/~ribet/"&gt;Ken Ribet&lt;/a&gt; following the screening.&lt;/p&gt;
&lt;p&gt;In India, we have been exposed to Ramanujan quite early in our lives. I had stories in school book about great Indian
mathematicians like Aryabhata, Brahmangupta, and Bhaskaracharya. Indian Satellites to Space launched by ISRO bear their
names too. Along with those personalities, we have Srinivasa Ramanujan and whom we know for his invention of &lt;a class="reference external" href="https://nrich.maths.org/1380"&gt;Magic
Squares&lt;/a&gt;, and &lt;strong&gt;Ramanujan Number&lt;/strong&gt;, &lt;strong&gt;the smallest number expressible as sum of two cubes.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
1729 = 1^3 + {12}^3 = 9^3 + 10^3
\end{equation*}
&lt;/div&gt;
&lt;p&gt;Beyond that, I had not known much about the significance of this number or Ramanujan's work.&lt;/p&gt;
&lt;p&gt;Years later, when taking &lt;a class="reference external" href="https://youtu.be/h_9WjWENWV8?t=14m48s"&gt;online courses&lt;/a&gt;, I had come to know about Hardy and Ramanujan's research in Number Theory
being at the core of secure communication and cryptography. Do you use Credit Cards online and feel confident that
someone will not maliciously take your money? All this is was because of the research in number theory.&lt;/p&gt;
&lt;p&gt;There is also famous anecdote associated with Ramanujan, known to many from South India, Ramanujan prayed to a goddess,
and she gave inspiration for his work.  He mentions that his theorems had come up like a dream, a boon granted by the
Goddess, and he would write formulae in his book. That's how he invented those theorems.&lt;/p&gt;
&lt;p&gt;If it happened like that, imagine how excited young students from Madurai will be, where there a temple every
hundred feet. :)&lt;/p&gt;
&lt;p&gt;It needs to be clarified that, Ramanujan was a genius and he also worked very hard on his subjects.&lt;/p&gt;
&lt;p&gt;All these are portrayed well in this movie. The relationship between Hardy and Ramanujan, the scientific culture at
Trinity College, London revealed in real detail. The movie has a significant portion dealing with how Hardy mentors
Ramanujan, and strives to bring his work to the modern world.&lt;/p&gt;
&lt;p&gt;In the question and answer session that followed, two questions were of interest to me.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How do mathematicians study Ramanujan's work when he has not left many formula proofs with his equation?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Richard_Borcherds"&gt;Richard Borcheds&lt;/a&gt;, who is an accomplished mathematician, replied that Ramanujan's work was published in the form of
series of &lt;a class="reference external" href="http://www.amazon.com/Ramanujans-Notebooks-Bruce-C-Berndt/dp/1461270073/"&gt;notebooks&lt;/a&gt;. He left behind three notebooks containing almost 3000 theorems, virtually all without proof. The
reason he could have done that is perhaps he grew up in a time when the paper was very expensive for him and he wanted
to be economical.&lt;/p&gt;
&lt;p&gt;(It did not answer the question, but provided a good perspective).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Question 2: In the movie, Ramanujan is shown to be desisting writing formal proofs. Is that true?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Richard Borcheds shared that, it is bit exaggerated in the movie. Ramanujan always knew the proof of his work and
could state it if he wanted to. But he usually did not.&lt;/p&gt;
&lt;p&gt;I enjoyed watching this movie and listening to the perspectives associated with the genius from kumbakonam.&lt;/p&gt;&lt;/div&gt;</description><category>mathjax</category><guid>http://www.xtoinfinity.com/posts/the-man-who-knew-infinity.html</guid><pubDate>Mon, 27 Jun 2016 04:12:17 GMT</pubDate></item><item><title>Comma Free Codes</title><link>http://www.xtoinfinity.com/posts/comma-free-codes.html</link><dc:creator>Senthil Kumaran</dc:creator><description>&lt;div&gt;&lt;p&gt;We awe at Donald Knuth. I wondered, if I can understand a subject taught by Knuth and derive satisfaction of learning
something directly from the master. I attended his most recent lecture on "comma free codes", felt that it was
accessible and could be understood by putting some effort. This is my attempt to grasp the topic of "comma free codes",
taught by Knuth for his 21st annual christmas tree lecture on Dec 2015. We will use some definitions directly from
Williard Eastman's paper, reference the topics in wikipedia, look at Knuth's explanation.&lt;/p&gt;
&lt;p&gt;We talk of codes in the context of information theory. A code is a system of rules to convert information—such as a
letter, word, sound, image, or gesture—into another form or representation. A sequence of symbols, like a sequence of
binary symbols, sequence of base-10 decimals or a sequence of English language alphabets can all be termed as "code". A
block code is a set of codes having the same length.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Comma Free Block Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Comma free code is a code that can be easily synchronized without any external unit like comma or space,
"&lt;strong&gt;likethis&lt;/strong&gt;". Comma free block code is set of same length codes having the comma free property.&lt;/p&gt;
&lt;p&gt;The four letter words in "&lt;strong&gt;goodgame&lt;/strong&gt;" is recognizable, it easy to derive those as "&lt;strong&gt;good&lt;/strong&gt;" and "&lt;strong&gt;game&lt;/strong&gt;".
Other possible substring four letter words in that phrase "&lt;strong&gt;oodg&lt;/strong&gt;", "&lt;strong&gt;odga&lt;/strong&gt;", "&lt;strong&gt;dgga&lt;/strong&gt;" are invalid words in
english (or non code-words) and thus we did not have any problem separating the codewords when they were not
separated by delimiters like space or comma. Anecdotally, Chinese and Thai languages do not use space between words.&lt;/p&gt;
&lt;p&gt;Take an alternate example, "&lt;strong&gt;fujiverb&lt;/strong&gt;". Can you say deterministically if the word "&lt;strong&gt;jive&lt;/strong&gt;" is my code word? Or my
code words consists only of "&lt;strong&gt;fuji&lt;/strong&gt;" and "&lt;strong&gt;verb&lt;/strong&gt;". You cannot determine it from this message and thus, "fuji" and
"verb" do not form valid a "comma free block codes".&lt;/p&gt;
&lt;p&gt;The same applies to a periodic code word like "&lt;strong&gt;gaga&lt;/strong&gt;". If a message "&lt;strong&gt;gagagaga&lt;/strong&gt;" occurs, then the middle word
"&lt;strong&gt;gaga&lt;/strong&gt;" will be ambiguous as it is composed of 2-letter suffix and a 2-prefix of our code word and we wont be able to
differentiate it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mathematical definition&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Comma free code words are defined like this.&lt;/p&gt;
&lt;blockquote&gt;
A block code, &lt;strong&gt;C&lt;/strong&gt; containing words of length &lt;strong&gt;n&lt;/strong&gt; is called comma free if, and only if, for any words
&lt;span class="math"&gt;\(w = w_1, w_2 ... w_n. \: and \: x = x_1, x_2 ... x_n\)&lt;/span&gt; belonging to &lt;strong&gt;C&lt;/strong&gt;, the &lt;strong&gt;n&lt;/strong&gt; letter overlaps
&lt;span class="math"&gt;\(w_k ... w_nx_1 .... x_{k-1} (k = 2, ... n)\)&lt;/span&gt; are not words in the code.&lt;/blockquote&gt;
&lt;p&gt;This simply means that if two code words are joined together, than in that joined word, any substring from second letter
to the last of the block code length should not be a code word.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How to find them?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Backtracking.&lt;/p&gt;
&lt;p&gt;The general idea to find comma free block codes is use a backtracking solution and for every word that we want to add to
the list, prune through through already added words and find if the new word can be a substring of two words joined
together from the existing list. Knuth gave a demo of finding the maximum comma free subset of the four letter words.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.xtoinfinity.com/listings/commafree_check.py.html"&gt;commafree_check.py&lt;/a&gt;  &lt;a class="reference external" href="http://www.xtoinfinity.com/listings/commafree_check.py"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_a9006a6b1b114bf8a592eafffd51e56b-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;check_comma_free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_a9006a6b1b114bf8a592eafffd51e56b-2"&gt;&lt;/a&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;check_periodic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_a9006a6b1b114bf8a592eafffd51e56b-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"input string is periodic, it cannot be commafree."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a9006a6b1b114bf8a592eafffd51e56b-4"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt;
&lt;a name="rest_code_a9006a6b1b114bf8a592eafffd51e56b-5"&gt;&lt;/a&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;comma_free_words&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_a9006a6b1b114bf8a592eafffd51e56b-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;comma_free_words&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a9006a6b1b114bf8a592eafffd51e56b-7"&gt;&lt;/a&gt;  &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_a9006a6b1b114bf8a592eafffd51e56b-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;parts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_parts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a9006a6b1b114bf8a592eafffd51e56b-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tail&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_a9006a6b1b114bf8a592eafffd51e56b-10"&gt;&lt;/a&gt;      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;any_starts_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;any_ends_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;any_starts_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;any_ends_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
&lt;a name="rest_code_a9006a6b1b114bf8a592eafffd51e56b-11"&gt;&lt;/a&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; are part of the previous words."&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_a9006a6b1b114bf8a592eafffd51e56b-12"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt;
&lt;a name="rest_code_a9006a6b1b114bf8a592eafffd51e56b-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;comma_free_words&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;This logic is dependent on the order in which comma free block codes are analyzed. For finding a maximal set in a given
alphabet size in any order a proper backtracking based solution should be devised, which considers all the cases of
insertions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How many are there?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Backtracking based solution requires us to intelligently prune the search space. Finding effective strategies for
pruning the search space becomes our the next problem in finding the comma free codes. We will have to determine how
many comma free block codes are possible for a given alphabet size and for a given length.&lt;/p&gt;
&lt;p&gt;For 4 letter words, (n = 4) of the alphabet size &lt;strong&gt;m&lt;/strong&gt;, we know that there are &lt;span class="math"&gt;\(m^4\)&lt;/span&gt; possible words (permutation
with repetition). But we're restricted to aperiodic words of length 4, of which there are &lt;span class="math"&gt;\(m^4 - m^2\)&lt;/span&gt;. Notice
further that if word, &lt;strong&gt;item&lt;/strong&gt; has been chosen, we aren't allowed to include any of its cyclic shifts &lt;strong&gt;temi&lt;/strong&gt;, &lt;em&gt;emit*&lt;/em&gt;,
or &lt;strong&gt;mite&lt;/strong&gt;, because they all appear within &lt;strong&gt;itemitem&lt;/strong&gt;. Hence the maximum number of codewords in our commafree code
cannot exceed &lt;span class="math"&gt;\((m^4 - m^2)/4\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Let us consider the binary case, m = 2 and length n = 4, &lt;strong&gt;C(2, 4)&lt;/strong&gt;. We can choose four-bit "words" like this.&lt;/p&gt;
&lt;p&gt;[0001] = {0001, 0010, 0100, 1000},&lt;/p&gt;
&lt;p&gt;[0011] = {0011, 0110, 1100, 1001},&lt;/p&gt;
&lt;p&gt;[0111] = {0111, 1100, 1101, 1011},&lt;/p&gt;
&lt;p&gt;The maximum number of code words from our formula will be &lt;span class="math"&gt;\(2^4 - 2^2/4 \: = \: 3\)&lt;/span&gt;.  Can we choose three
four-bit "words" from the above cyclic classes? Yes and choosing the lowest in each cyclic class will simply do. But
choosing the lowest will not work for all n and m.&lt;/p&gt;
&lt;p&gt;In the class taught by Knuth, we analyzed the choosing codes when m = 3 {0, 1, 2} and for n = 3, &lt;strong&gt;C(3, 3)&lt;/strong&gt;. The words
in the category were&lt;/p&gt;
&lt;p&gt;000  111  222     # Invalid since they are periodic&lt;/p&gt;
&lt;p&gt;001  010  100     # A set of cyclic shifts, only one can taken as a valid code word.&lt;/p&gt;
&lt;p&gt;002  020  200&lt;/p&gt;
&lt;p&gt;011  110  101&lt;/p&gt;
&lt;p&gt;012  120  201&lt;/p&gt;
&lt;p&gt;021  210  102&lt;/p&gt;
&lt;p&gt;112  121  211&lt;/p&gt;
&lt;p&gt;220  202  022&lt;/p&gt;
&lt;p&gt;221  212  122&lt;/p&gt;
&lt;p&gt;The number 3-alphabet code words of length 3 is 27 ( = &lt;span class="math"&gt;\(3^3\)&lt;/span&gt;). The set of valid code words in this will be
&lt;span class="math"&gt;\((3^3-3) / 3 = 8\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Choosing the lowest index will not work here for e.g, if we choose 021 and 220, and we send the word 220021 the word 002
is conflicting as it is part of our code word. With any back-tracking based solution, we will have to determine the
correct non-cyclic words to choose in each set to form our maximal set of 8 code words.&lt;/p&gt;
&lt;p&gt;The problem of finding comma free code words increases exponentially to the size of the length of the code word and on
the code word size. For e.g, The task of finding all four-letter comma free codes is not difficult when m = 3, and only
18 cycle classes are involved. But it already becomes challenging when m = 4, because we must then deal with &lt;span class="math"&gt;\((4^4
- 4^2) / 4 = 60\)&lt;/span&gt; classes. Therefore we'll want to give it some careful thought as we try to set it up for backtracking.&lt;/p&gt;
&lt;p&gt;Willard Eastman came up with clever solution to find a code word for any odd word length n over an infinite alphabet
size. Eastman proposed a solution wherein if we give a n letter word (n should be odd), the algorithm will output the
correct shift required to make the n letter word a code word.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Eastman's Algorithm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Construction of Comma Free Codes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The following elegant construction yields a comma free code of maximum size for any odd block length n, over any
alphabet.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a sequence of &lt;span class="math"&gt;\(x =x_0x_1...x_{n-1}\)&lt;/span&gt; of nonnegative integers, where x differs from each of its
other cyclic shifts &lt;span class="math"&gt;\(x_k...x_{n-1}x_0..x_{k-1}\)&lt;/span&gt; for 0 &amp;lt; k &amp;lt; n, the procedure outputs a cyclic shift
&lt;span class="math"&gt;\(\sigma x\)&lt;/span&gt; with the property that the set of all such &lt;span class="math"&gt;\(\sigma x\)&lt;/span&gt; is a commafree.&lt;/p&gt;
&lt;p&gt;We regard x as an infinite periodic sequence &lt;span class="math"&gt;\(&amp;lt;x_n&amp;gt;\)&lt;/span&gt; with &lt;span class="math"&gt;\(x_k = x_{k-n}\)&lt;/span&gt; for all &lt;span class="math"&gt;\(k \ge n\)&lt;/span&gt;. Each
cyclic shift then has the form &lt;span class="math"&gt;\(x_kx_{k+1}...x_{k+n-1}\)&lt;/span&gt;. The simplest nontrivial example occurs when n = 3,
where &lt;span class="math"&gt;\(x=x_0 x_1 x_2 x_0 x_1 x_2 x_0 ...\)&lt;/span&gt; and we don't have &lt;span class="math"&gt;\(x_0 = x_1 = x_2\)&lt;/span&gt;. In this case, the algorithm
outputs &lt;span class="math"&gt;\(x_kx_{k+1}x_{k+2}\)&lt;/span&gt; where &lt;span class="math"&gt;\(x_k &amp;gt; x_{k+1} \le x_{k+2}\)&lt;/span&gt;; and the set of all such triples clearly
satisfies the commafree condition.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The idea expressed is to choose a triplet (a, b, c) of the form.&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
a \: \gt b \: \le c
\end{equation*}
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Why does this work?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If we take two words, xyz and abc following this property, combining them we have,&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
x \: \gt y \: \le z \quad a \: \gt b \: \le c
\end{equation*}
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;yza cannot be a word because z cannot be &amp;gt; than y.&lt;/li&gt;
&lt;li&gt;zab cannot be a word because a cannot be &amp;lt; than b.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There by none of the substrings will be a code word and we can satisfy the comma free property.&lt;/p&gt;
&lt;p&gt;And if we use this condition to determine the code words in our &lt;strong&gt;C(3,3)&lt;/strong&gt; set, we will come up with the following
codes which can form valid code words.&lt;/p&gt;
&lt;strike&gt;000  111  222&lt;/strike&gt; &lt;br&gt;

001  010  &lt;strong&gt;100&lt;/strong&gt; &lt;br&gt;

002  020  &lt;strong&gt;200&lt;/strong&gt; &lt;br&gt;

011  110  &lt;strong&gt;101&lt;/strong&gt; &lt;br&gt;

012  120  &lt;strong&gt;201&lt;/strong&gt; &lt;br&gt;

021  210  &lt;strong&gt;102&lt;/strong&gt; &lt;br&gt;

112  121  &lt;strong&gt;211&lt;/strong&gt; &lt;br&gt;

220  &lt;strong&gt;202&lt;/strong&gt;  022 &lt;br&gt;

221  &lt;strong&gt;212&lt;/strong&gt;  122 &lt;br&gt;&lt;p&gt;The highlighted words will form valid code words and all of these satisfy the criteria, &lt;span class="math"&gt;\(a \: \gt b \: \le c\)&lt;/span&gt;
Now, if you are given a word like &lt;strong&gt;211201212&lt;/strong&gt;, you know for sure that they are composed of &lt;strong&gt;211&lt;/strong&gt;, &lt;strong&gt;201&lt;/strong&gt; and
&lt;strong&gt;212&lt;/strong&gt; as none of other intermediaries like (112, 120, 201, 012, 121) occur in our set.&lt;/p&gt;
&lt;p&gt;Eastman's algorithm helps in finding the correct shift required to make any word a code word.&lt;/p&gt;
&lt;p&gt;For e.g,&lt;/p&gt;
&lt;p&gt;Input: 001
Output: Shift by 2, thus producing 100&lt;/p&gt;
&lt;p&gt;Input: 221
Output: Shift by 1, thus producing 212&lt;/p&gt;
&lt;p&gt;And the beauty is, it is not just for words of length 3, but for &lt;strong&gt;any odd word length n&lt;/strong&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The key idea is to think of &lt;strong&gt;x&lt;/strong&gt; as partitioned into &lt;strong&gt;t&lt;/strong&gt; substrings by boundary marked by &lt;span class="math"&gt;\(b_j\)&lt;/span&gt; where
&lt;span class="math"&gt;\(0 \le b_0 \lt b_1 \lt ... \lt b_{t-1} &amp;lt; n\)&lt;/span&gt; and &lt;span class="math"&gt;\(b_j = b_{j-t} + n\)&lt;/span&gt; for &lt;span class="math"&gt;\(j \ge t\)&lt;/span&gt;. Then substring
&lt;span class="math"&gt;\(y_j\)&lt;/span&gt; is &lt;span class="math"&gt;\(x_{b_j} x_{b_{j+1}-1}\)&lt;/span&gt;. The number &lt;strong&gt;t&lt;/strong&gt; of substrings is always odd. Initially, t = n and
&lt;span class="math"&gt;\(b_j = j\)&lt;/span&gt; for all j; ultimately t = 1 and &lt;span class="math"&gt;\(\sigma x = y0\)&lt;/span&gt; is the desired output.&lt;/p&gt;
&lt;p&gt;Eastman's algorithm is based on comparison of adjacent substrings &lt;span class="math"&gt;\(y_{j-1} and y_j\)&lt;/span&gt;. If those substring have
the same length, we use lexicographic comparison; otherwise we declare that the longer string is bigger.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The number of &lt;strong&gt;t&lt;/strong&gt; substring is always odd because we went with an odd string length (n).&lt;/p&gt;
&lt;p&gt;The comparison of adjacent substring form the recursive nature of the algorithm, we start with small substring of
length 1 adjacent to each other and then we find compare higher length substring, whose markers have been found by
the previous step. This will become clear as we look the hand demo.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://www.amazon.com/gp/product/B005J52SRE"&gt;&lt;img alt="http://ecx.images-amazon.com/images/I/41KZVIUGswL._SX332_BO1,204,203,200_.jpg" class="align-right" src="http://ecx.images-amazon.com/images/I/41KZVIUGswL._SX332_BO1,204,203,200_.jpg" style="width: 160px; height: 200px;"&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Basin and Ranges&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
It's convenient to describe the algorithm using the terminology based on the topograph of Nevada. Say that i is a
basin if the substrings satisfy &lt;span class="math"&gt;\(y_{i-1} \gt y_i \le y_{i+1}\)&lt;/span&gt;. There must be at least one basin; otherwise all
the &lt;span class="math"&gt;\(y_i\)&lt;/span&gt; would be equal, and x would equal one of its cyclic shifts. We look at consecutive basins, i and j;
this means that i &amp;lt; j and that i and j are basins, and that i+1 through j - 1 are not basins. If there's only one
basin we have &lt;span class="math"&gt;\(j = i + t\)&lt;/span&gt;. The indices between consecutive basins are called ranges.&lt;/blockquote&gt;
&lt;p&gt;The basin and ranges is Knuth's terminology, taken from the book Basin and Ranges by John McPhee which describes the
topology of Nevada. It is easier to imagine the construct we are looking for if we start to think in terms of basin and
ranges.&lt;/p&gt;
&lt;blockquote&gt;
Since t is odd, there is an odd number of consecutive basins for which &lt;span class="math"&gt;\(j - i\)&lt;/span&gt; is odd. Each round of Eastman's
algorithm retains exactly one boundary point in the range between such basins and deletes all the others. The
retained point is the smallest &lt;span class="math"&gt;\(k = i + 2l\)&lt;/span&gt; such that &lt;span class="math"&gt;\(y_k \gt y_{k+1}\)&lt;/span&gt;. At the end of a round, we reset
t to the number of retained boundary points, and we begin another round if t &amp;gt; 1.&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Word of length 19&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let's work through the algorithm by hand when n = 19 and x = 3141592653589793238&lt;/p&gt;
&lt;p&gt;Phase 1&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;First markers differentiate each character.&lt;/li&gt;
&lt;li&gt;We use . to denote the cyclic repetition of the 19 letter word.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
3 | 1 | 4 |  1 | 5 | 9 | 2 | 6 | 5 | 3 | 5 | 8 | 9 | 7 | 9 | 3 | 2 | 3 | 8 . 3 | 1 | 4 | 1 | 5
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Next we go about identifying basins. We identify the basins where for any 3 numbers (a, b, c), &lt;span class="math"&gt;\(a \: \gt b
\le c\)&lt;/span&gt; and put the markers below them&lt;/li&gt;
&lt;li&gt;After the cyclic repetition we see the repetition of the basin. Like the last line below 1 is same as the first
line. It is the basin that is repeated.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
3  1  4  1  5  9  2  6  5  3  5  8  9  7  9  3  2  3  8  3  1  4  1 5

   |     |        |        |           |        |        .  |
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;We mark the ranges as odd length or even length ones.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
3  1  4  1  5  9  2  6  5  3  5  8  9  7  9  3  2  3  8  3  1  4  1 5

---|--e--|---o----|---o----|-----e-----|---o----|-----e--.--|--------
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Next, take all the odd length basin markers, go by steps of 2, 4, 6 so on and identify the first greater than
number and place the new basin markers before them.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For e.g, in 1-5-9-2. The 2 length path is "1-5-9" and first higher will be 9 and we have to place the marker ahead of
it. So, the phase 0 of eastman algorithm will output, 5, 8 and 15. denoting the indices where our basins are after the
first phase.&lt;/p&gt;
&lt;p&gt;If you are watching the video with Knuth giving a demo, there is a mistake in the video that second basin identifier
is placed after 5, instead of before 5 (We should go by steps of 2 and place it before the first greater than number).&lt;/p&gt;
&lt;pre class="literal-block"&gt;
3  1  4  1  5  | 9  2  6  |  5  3  5  8  9  7  9  | 3  2  3  8  . 3  1  4 1  5
&lt;/pre&gt;
&lt;p&gt;Phase 2&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;In the second phase, we use the basin markers of the previous phase and compare the sub strings denoted by the basin.&lt;/li&gt;
&lt;li&gt;We take the substring of length 19, but now denoted by basins. The repetition of the string in the previous steps
helped us here.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
9  2  6  |  5  3  5  8  9  7  9  | 3  2  3  8  3  1  4 1  5
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;We apply the algorithm recursively on the strings 926, 5358979 and 323831415. We find that the string 323831415 is
greater than the rest, so we can keep the basin marker ahead of it.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
9  2  6  5  3  5  8  9  7  9  | 3  2  3  8  3  1  4 1  5
&lt;/pre&gt;
&lt;p&gt;At the end of Phase 2, the algorithm outputs index 15, as the shift required to create the code word out of 19 word
string. And thus our code word found by the eastman's algorithm is&lt;/p&gt;
&lt;pre class="literal-block"&gt;
3  2  3  8  3  1  4 1  5  9  2  6  5  3  5  8  9  7  9
&lt;/pre&gt;
&lt;p&gt;Knuth's gave a demo with his implementation in CWEB. He shared a thought that even though algorithm is expressed
recursively, the iterative implementation was straight forward. For the rest of the lecture he explores the
algorithm on a binary string of PI of n = 19 and finds the shift required. Also, gives the probability of Eastman's
algorithm finishing in one round, that is, just the phase 1.&lt;/p&gt;
&lt;p&gt;All these are covered as exercises and answers in the pre-fascicle 5B of his volume 5 of The Art of Computer
Programming, which can be explored in further depth.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video&lt;/strong&gt;&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/48iJx8FVuis" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Pre-Fascicle 5B, Volume 4 of The Art of Computer Programming, Introduction to Backtracking.
&lt;a class="reference external" href="http://www-cs-faculty.stanford.edu/~uno/taocp.html"&gt;http://www-cs-faculty.stanford.edu/~uno/taocp.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;On the construction of comma free codes &lt;a class="reference external" href="http://ieeexplore.ieee.org/xpl/articleDetails.jsp?reload=true&amp;amp;arnumber=1053766"&gt;http://ieeexplore.ieee.org/xpl/articleDetails.jsp?reload=true&amp;amp;arnumber=1053766&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;COMMAFREE-EASTMAN.w &lt;a class="reference external" href="http://www-cs-faculty.stanford.edu/~uno/programs/commafree-eastman.w"&gt;http://www-cs-faculty.stanford.edu/~uno/programs/commafree-eastman.w&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tidbits&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Eastman had worked on Travelling Salesman problem in 1950s before Gomory had come up with integer
programming. &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ralph_E._Gomory"&gt;https://en.wikipedia.org/wiki/Ralph_E._Gomory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chinese language do not use space between words. &lt;a class="reference external" href="https://3000hanzi.com/blog/should_chinese_add_spaces_between_words/"&gt;https://3000hanzi.com/blog/should_chinese_add_spaces_between_words/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Thai language does not use spaces between words.
&lt;a class="reference external" href="https://www.quora.com/Why-doesnt-the-Thai-language-use-spaces-between-words"&gt;https://www.quora.com/Why-doesnt-the-Thai-language-use-spaces-between-words&lt;/a&gt;
&lt;a class="reference external" href="http://www.thai-language.com/ref/breaking-words"&gt;http://www.thai-language.com/ref/breaking-words&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mobius Function: &lt;a class="reference external" href="http://mathworld.wolfram.com/MoebiusFunction.html"&gt;http://mathworld.wolfram.com/MoebiusFunction.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Comma Free Code: &lt;a class="reference external" href="http://cms.math.ca/openaccess/cjm/v10/cjm1958v10.0202-0209.pdf"&gt;http://cms.math.ca/openaccess/cjm/v10/cjm1958v10.0202-0209.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>algorithms</category><category>knuth</category><category>mathjax</category><category>v1</category><guid>http://www.xtoinfinity.com/posts/comma-free-codes.html</guid><pubDate>Wed, 16 Dec 2015 16:40:37 GMT</pubDate></item></channel></rss>