.. id: 68
.. status: approved
.. approved: True
.. author: Senthil
.. author_url: http://anythingisfine.wordpress.com/
.. date_utc: 2006-07-23 12:38:55
.. parent_id: 67
.. wordpress_user_id: 4116355

Re: Some Python Notes

I read the article last week. Though it was thought provoking, it did not much disturb me as not to dive deeper into python. I dont know, sometimes I stumble upon few limitations but they are more due to lack of knowledge than anything else. Python I have found to be easy to write a program in. esr has some of his thoughts on python <a href="http://www.linuxjournal.com/article/3882" rel="nofollow">here</a>.

<pre>

An important measure of effort in coding is the frequency with which you write something that doesn't actually match your mental representation of the problem, and have to backtrack on realizing that what you just typed won't actually tell the language to do what you're thinking. An important measure of good language design is how rapidly the percentage of missteps of this kind falls as you gain experience with the language.



When you're writing working code nearly as fast as you can type and your misstep rate is near zero, it generally means you've achieved mastery of the language. But that didn't make sense, because it was still day one and I was regularly pausing to look up new language and library features!



This was my first clue that, in Python, I was actually dealing with an exceptionally good design. Most languages have so much friction and awkwardness built into their design that you learn most of their feature set long before your misstep rate drops anywhere near zero. Python was the first general-purpose language I'd ever used that reversed this process.



Not that it took me very long to learn the feature set. I wrote a working, usable fetchmailconf, with GUI, in six working days, of which perhaps the equivalent of two days were spent learning Python itself. This reflects another useful property of the language: it is compact--you can hold its entire feature set (and at least a concept index of its libraries) in your head. C is a famously compact language....

</pre>

Let me put somemore points. Btw, try the Trip on the funny boat. That was a nice one.